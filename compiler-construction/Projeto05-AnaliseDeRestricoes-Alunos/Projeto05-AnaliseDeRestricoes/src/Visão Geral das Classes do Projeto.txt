Todas as classes que não estão marcadas com asterisco são fornecidas com suas
respectivas implementações completas. Em contrapartida, as classes marcadas com
asteriscos, têm suas implementações parciais realizada. Para a maioria das classes
da AST a implementação parcial contém:
    - o construtor e os métodos sobrescritos sem código em seus respectivos blocos;
    - os atributos/campos são mantidos para que possam ser usados como dica.

Neste passo do projeto, será necessário implementar o método checkConstraints()
das classes da AST descritas abaixo. Note que logo a seguir há um resumo das
classes que precisam ter esse método implementado! É nelas que você precisará
mexer!

Implementar o método checkConstraints() nas classes abaixo, contidas no pacote
edu.citadel.cprl.ast:

O  ArrayTypeDecl.java
O  ConstDecl.java
O  ExitStmt.java
X  FunctionDecl.java -> Reajustado
X  LoopStmt.java -> Reajustado
O  MultiplyingExpr.java
O  NotExpr.java
O  ProcedureCallStmt.java
O  ReadStmt.java
O  RelationalExpr.java
O  ReturnStmt.java 


Abaixo segue a listagem completa das classes:

No pacote edu.citadel.cprl

  ArrayType.java
  Compiler.java
  FirstFollowSets.java
  IdTable.java
  LoopContext.java
  Parser.java
  ScopeLevel.java
  SubprogramContext.java
  Type.java

No pacote edu.citadel.cprl.ast

  AST.java
  AddingExpr.java
* ArrayTypeDecl.java         -> Implementar o método checkConstraints() -> feito
* AssignmentStmt.java        -> Não precisa mexer por enquanto
  BinaryExpr.java
* ConstDecl.java             -> Implementar o método checkConstraints() -> feito
  ConstValue.java
  Declaration.java
* DeclarativePart.java       -> Não precisa mexer por enquanto
  ElsifPart
* ExitStmt.java              -> Implementar o método checkConstraints() -> feito
  Expression.java
  FunctionCall.java
* FunctionDecl.java          -> Implementar o método checkConstraints() -> feito
  IfStmt.java
  InitialDecl.java
  LogicalExpr.java
* LoopStmt.java              -> Implementar o método checkConstraints() -> feito
* MultiplyingExpr.java       -> Implementar o método checkConstraints() -> feito
  NamedDecl.java
  NamedValue.java
* NegationExpr.java          -> Não precisa mexer por enquanto
* NotExpr.java               -> Implementar o método checkConstraints() -> feito
  OutputStmt.java
  ParameterDecl.java
* ProcedureCallStmt.java     -> Implementar o método checkConstraints() -> feito
* ProcedureDecl.java         -> Não precisa mexer por enquanto
  Program.java
* ReadStmt.java              -> Implementar o método checkConstraints() -> feito
* RelationalExpr.java        -> Implementar o método checkConstraints() -> feito
* ReturnStmt.java            -> Implementar o método checkConstraints() -> feito
  SingleVarDecl.java
  Statement.java
* StatementPart.java         -> Não precisa mexer por enquanto
  SubprogramDecl.java
  UnaryExpr.java
  VarDecl.java
* Variable.java              -> Não precisa mexer por enquanto
  WriteStmt.java
* WritelnStmt.java           -> Não precisa mexer por enquanto
